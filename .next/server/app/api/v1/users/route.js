"use strict";(()=>{var e={};e.id=4237,e.ids=[4237],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7332:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>w,requestAsyncStorage:()=>v,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{GET:()=>d,POST:()=>l});var a=t(9303),n=t(8716),o=t(670),u=t(728),i=t(7070);let p=require("bcrypt");var c=t.n(p);async function d(e,r){try{let e=await u.Z.user.findMany({include:{role:!0}});return i.NextResponse.json(e,{status:200})}catch(e){return i.NextResponse.json({message:"Error fetching users"},{status:500})}}async function l(e,r){try{let r=await e.json();if(!r.password)return i.NextResponse.json({message:"Password is required"},{status:400});let t=await c().hash(r.password,10),s=await u.Z.user.create({data:{...r,password:t}});return i.NextResponse.json(s,{status:201})}catch(e){return i.NextResponse.json({message:"Error creating user"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/v1/users/route",pathname:"/api/v1/users",filename:"route",bundlePath:"app/api/v1/users/route"},resolvedPagePath:"E:\\Proyectos\\GaryViejo\\PaginaWeb\\src\\app\\api\\v1\\users\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:v,staticGenerationAsyncStorage:x,serverHooks:g}=m,h="/api/v1/users/route";function w(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:x})}},728:(e,r,t)=>{t.d(r,{Z:()=>s});let s=new(require("@prisma/client")).PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[789],()=>t(7332));module.exports=s})();