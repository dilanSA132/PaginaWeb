"use strict";(()=>{var e={};e.id=8573,e.ids=[8573],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6517:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{DELETE:()=>p,PUT:()=>d});var a=t(9303),o=t(8716),i=t(670),u=t(728),n=t(7070);async function p(e,r){try{let r=e.url.split("/").pop(),t=await u.Z.user.delete({where:{id:Number(r)}});return n.NextResponse.json(t,{status:200})}catch(e){return n.NextResponse.json({message:"Error deleting user"},{status:500})}}async function d(e,r){try{let r=e.url.split("/").pop();console.log("ID recibido:",r);let t=await e.json();console.log("Datos recibidos para actualizar:",t);let s=await u.Z.user.update({where:{id:Number(r)},data:{...t}});return n.NextResponse.json(s,{status:200})}catch(e){return console.error("Error al actualizar:",e),n.NextResponse.json({message:"Error updating user"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/v1/users/[id]/route",pathname:"/api/v1/users/[id]",filename:"route",bundlePath:"app/api/v1/users/[id]/route"},resolvedPagePath:"E:\\Proyectos\\GaryViejo\\PaginaWeb\\src\\app\\api\\v1\\users\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:g}=l,v="/api/v1/users/[id]/route";function x(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},728:(e,r,t)=>{t.d(r,{Z:()=>s});let s=new(require("@prisma/client")).PrismaClient}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[789],()=>t(6517));module.exports=s})();